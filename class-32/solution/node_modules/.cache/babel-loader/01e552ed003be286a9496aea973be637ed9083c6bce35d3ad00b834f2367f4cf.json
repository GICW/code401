{"ast":null,"code":"var _jsxFileName = \"/home/qxie/401/class-32/solution/src/Context/Settings/Settings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsContext = /*#__PURE__*/React.createContext();\nconst SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [showCompleted, setShowCompleted] = useState(false);\n  const [pageItems, setPageItems] = useState(3);\n  const [sort, setSort] = useState('difficulty');\n  const saveLocally = () => {\n    localStorage.setItem('todo', JSON.stringify({\n      showCompleted,\n      pageItems,\n      sort\n    }));\n  };\n  let values = {\n    showCompleted,\n    pageItems,\n    sort,\n    setShowCompleted,\n    setPageItems,\n    setSort,\n    saveLocally\n  };\n  useEffect(() => {\n    const storage = JSON.parse(localStorage.getItem('todo'));\n    if (storage) {\n      setShowCompleted(storage.showCompleted);\n      setPageItems(storage.pageItems);\n      setSort(storage.sort);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsProvider, \"9B1Jvri+nSaMzVek/na39TnBzFQ=\");\n_c = SettingsProvider;\nexport default SettingsProvider;\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SettingsContext","createContext","SettingsProvider","children","_s","showCompleted","setShowCompleted","pageItems","setPageItems","sort","setSort","saveLocally","localStorage","setItem","JSON","stringify","values","storage","parse","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/qxie/401/class-32/solution/src/Context/Settings/Settings.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const SettingsContext = React.createContext();\n\nconst SettingsProvider = ({ children }) => {\n  const [showCompleted, setShowCompleted] = useState(false);\n  const [pageItems, setPageItems] = useState(3);\n  const [sort, setSort] = useState('difficulty');\n\n  const saveLocally = () => {\n    localStorage.setItem('todo', JSON.stringify({showCompleted, pageItems, sort}));\n  }\n\n  let values = {\n    showCompleted,\n    pageItems,\n    sort,\n    setShowCompleted,\n    setPageItems,\n    setSort,\n    saveLocally,\n  }\n\n  useEffect(() => {\n    const storage = JSON.parse(localStorage.getItem('todo'));\n    if (storage) {\n      setShowCompleted(storage.showCompleted);\n      setPageItems(storage.pageItems);\n      setSort(storage.sort);\n    }\n  }, [])\n\n  return (\n    <SettingsContext.Provider value={values}>\n      {children}\n    </SettingsContext.Provider>\n  )\n};\n\nexport default SettingsProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,eAAe,gBAAGL,KAAK,CAACM,aAAa,CAAC,CAAC;AAEpD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,YAAY,CAAC;EAE9C,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACV,aAAa;MAAEE,SAAS;MAAEE;IAAI,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,IAAIO,MAAM,GAAG;IACXX,aAAa;IACbE,SAAS;IACTE,IAAI;IACJH,gBAAgB;IAChBE,YAAY;IACZE,OAAO;IACPC;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMoB,OAAO,GAAGH,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;IACxD,IAAIF,OAAO,EAAE;MACXX,gBAAgB,CAACW,OAAO,CAACZ,aAAa,CAAC;MACvCG,YAAY,CAACS,OAAO,CAACV,SAAS,CAAC;MAC/BG,OAAO,CAACO,OAAO,CAACR,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAEL,MAAO;IAAAb,QAAA,EACrCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACrB,EAAA,CAjCIF,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAmCtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}